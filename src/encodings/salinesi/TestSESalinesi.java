
package encodings.salinesi;

import org.chocosolver.solver.Solver;
import org.chocosolver.solver.constraints.IntConstraintFactory;
import org.chocosolver.solver.constraints.LogicalConstraintFactory;
import org.chocosolver.solver.constraints.SatFactory;
import org.chocosolver.solver.constraints.nary.cnf.LogOp;
import org.chocosolver.solver.trace.Chatterbox;
import org.chocosolver.solver.variables.BoolVar;
import org.chocosolver.solver.variables.IntVar;
import org.chocosolver.solver.variables.VariableFactory;

public class TestSESalinesi {
	public static void main(String[] args) {
		long start = System.currentTimeMillis();
		
		Solver solver = new Solver();
		
		//--------------------------------------------
		//Features
		//--------------------------------------------
		int contFeatures = 140;
			
		BoolVar InversionTI_InversionTI = (BoolVar) VariableFactory.fixed("InversionTI_InversionTI", 1, solver);
		BoolVar InversionTI_MotivadoresdeNegocio = VariableFactory.bool("InversionTI_MotivadoresdeNegocio", solver);
		BoolVar InversionTI_Segmentarydepurarclientes = VariableFactory.bool("InversionTI_Segmentarydepurarclientes", solver);
		BoolVar InversionTI_Planificacionypresupuestosdemercadeo = VariableFactory.bool("InversionTI_Planificacionypresupuestosdemercadeo", solver);
		BoolVar InversionTI_Gestiondedatosylistas = VariableFactory.bool("InversionTI_Gestiondedatosylistas", solver);
		BoolVar InversionTI_Analisisdemarketing = VariableFactory.bool("InversionTI_Analisisdemarketing", solver);
		BoolVar InversionTI_GestiondeCampanias = VariableFactory.bool("InversionTI_GestiondeCampanias", solver);
		BoolVar InversionTI_Facilitartareasdemercadeoypublicidad = VariableFactory.bool("InversionTI_Facilitartareasdemercadeoypublicidad", solver);
		BoolVar InversionTI_Gestionderespuestasyclientespotenciales = VariableFactory.bool("InversionTI_Gestionderespuestasyclientespotenciales", solver);
		BoolVar InversionTI_Reducirciclosdeventas = VariableFactory.bool("InversionTI_Reducirciclosdeventas", solver);
		BoolVar InversionTI_Aumentartasasdecierredeventas = VariableFactory.bool("InversionTI_Aumentartasasdecierredeventas", solver);
		BoolVar InversionTI_Mejorarretenciondeclientes = VariableFactory.bool("InversionTI_Mejorarretenciondeclientes", solver);
		BoolVar InversionTI_Implementarnuevoprocesodeventas = VariableFactory.bool("InversionTI_Implementarnuevoprocesodeventas", solver);
		BoolVar InversionTI_Gestionarinformaciondeclientes = VariableFactory.bool("InversionTI_Gestionarinformaciondeclientes", solver);
		BoolVar InversionTI_Gestiondecasosdeclientes = VariableFactory.bool("InversionTI_Gestiondecasosdeclientes", solver);
		BoolVar InversionTI_Historialdeserviciosdeclientes = VariableFactory.bool("InversionTI_Historialdeserviciosdeclientes", solver);
		BoolVar InversionTI_Aumentarbasedeclientes = VariableFactory.bool("InversionTI_Aumentarbasedeclientes", solver);
		BoolVar InversionTI_Implementarnuevoprocesodeatencionalcliente = VariableFactory.bool("InversionTI_Implementarnuevoprocesodeatencionalcliente", solver);
		BoolVar InversionTI_Mejorarconocimientodelcliente = VariableFactory.bool("InversionTI_Mejorarconocimientodelcliente", solver);
		BoolVar InversionTI_Medirsatisfacciondelconsumidor = VariableFactory.bool("InversionTI_Medirsatisfacciondelconsumidor", solver);
		BoolVar InversionTI_Controlsobrerecursoshumanos = VariableFactory.bool("InversionTI_Controlsobrerecursoshumanos", solver);
		BoolVar InversionTI_Nuevosprocesosderecursoshumanos = VariableFactory.bool("InversionTI_Nuevosprocesosderecursoshumanos", solver);
		BoolVar InversionTI_Reclutamiento = VariableFactory.bool("InversionTI_Reclutamiento", solver);
		BoolVar InversionTI_Biodata_hojasdevida = VariableFactory.bool("InversionTI_Biodata_hojasdevida", solver);
		BoolVar InversionTI_Analisisdecargos_estructuraorganizacional = VariableFactory.bool("InversionTI_Analisisdecargos_estructuraorganizacional", solver);
		BoolVar InversionTI_Nominayadministraciondesalarios = VariableFactory.bool("InversionTI_Nominayadministraciondesalarios", solver);
		BoolVar InversionTI_Educacionycapacitacion = VariableFactory.bool("InversionTI_Educacionycapacitacion", solver);
		BoolVar InversionTI_Saludocupacional = VariableFactory.bool("InversionTI_Saludocupacional", solver);
		BoolVar InversionTI_Modelamientodeprocesosyorganigramas = VariableFactory.bool("InversionTI_Modelamientodeprocesosyorganigramas", solver);
		BoolVar InversionTI_Nuevosprocesosfinancieros = VariableFactory.bool("InversionTI_Nuevosprocesosfinancieros", solver);
		BoolVar InversionTI_Implementarcontrolessobreprocesosfinancieros = VariableFactory.bool("InversionTI_Implementarcontrolessobreprocesosfinancieros", solver);
		BoolVar InversionTI_Gestioncontable = VariableFactory.bool("InversionTI_Gestioncontable", solver);
		BoolVar InversionTI_Manejodecuentasporpagar_Proveedores = VariableFactory.bool("InversionTI_Manejodecuentasporpagar_Proveedores", solver);
		BoolVar InversionTI_Sistemasdecosteo = VariableFactory.bool("InversionTI_Sistemasdecosteo", solver);
		BoolVar InversionTI_Administraciondeactivosfijos = VariableFactory.bool("InversionTI_Administraciondeactivosfijos", solver);
		BoolVar InversionTI_Manejodeconciliacionesbancarias = VariableFactory.bool("InversionTI_Manejodeconciliacionesbancarias", solver);
		BoolVar InversionTI_Controldeinversiones = VariableFactory.bool("InversionTI_Controldeinversiones", solver);
		BoolVar InversionTI_Manejodeobligacionesfinancieras = VariableFactory.bool("InversionTI_Manejodeobligacionesfinancieras", solver);
		BoolVar InversionTI_Tesoreria = VariableFactory.bool("InversionTI_Tesoreria", solver);
		BoolVar InversionTI_Contabilidadanalitica = VariableFactory.bool("InversionTI_Contabilidadanalitica", solver);
		BoolVar InversionTI_Controlyadministraciondelpresupuesto = VariableFactory.bool("InversionTI_Controlyadministraciondelpresupuesto", solver);
		BoolVar InversionTI_Manejodeactivosdecapital = VariableFactory.bool("InversionTI_Manejodeactivosdecapital", solver);
		BoolVar InversionTI_Manejodeinventarios = VariableFactory.bool("InversionTI_Manejodeinventarios", solver);
		BoolVar InversionTI_Manejodealmacen = VariableFactory.bool("InversionTI_Manejodealmacen", solver);
		BoolVar InversionTI_Gestiondecompras = VariableFactory.bool("InversionTI_Gestiondecompras", solver);
		BoolVar InversionTI_Gestiondeactivosfijos = VariableFactory.bool("InversionTI_Gestiondeactivosfijos", solver);
		BoolVar InversionTI_Comercioexterior = VariableFactory.bool("InversionTI_Comercioexterior", solver);
		BoolVar InversionTI_Seguros = VariableFactory.bool("InversionTI_Seguros", solver);
		BoolVar InversionTI_Manejodeordenesdeproduccion = VariableFactory.bool("InversionTI_Manejodeordenesdeproduccion", solver);
		BoolVar InversionTI_Manejodeordenesdecompra = VariableFactory.bool("InversionTI_Manejodeordenesdecompra", solver);
		BoolVar InversionTI_Planificaciondenecesidadesdecapacidad = VariableFactory.bool("InversionTI_Planificaciondenecesidadesdecapacidad", solver);
		BoolVar InversionTI_Planificaciondesuministros = VariableFactory.bool("InversionTI_Planificaciondesuministros", solver);
		BoolVar InversionTI_Disminuirtiemposdeentrega = VariableFactory.bool("InversionTI_Disminuirtiemposdeentrega", solver);
		BoolVar InversionTI_Integracionconproveedores = VariableFactory.bool("InversionTI_Integracionconproveedores", solver);
		BoolVar InversionTI_Gestiondeproveedores = VariableFactory.bool("InversionTI_Gestiondeproveedores", solver);
		BoolVar InversionTI_Administraciondemateriasprimas = VariableFactory.bool("InversionTI_Administraciondemateriasprimas", solver);
		BoolVar InversionTI_Gestiondebodega = VariableFactory.bool("InversionTI_Gestiondebodega", solver);
		BoolVar InversionTI_Realizarcontroldecostos = VariableFactory.bool("InversionTI_Realizarcontroldecostos", solver);
		BoolVar InversionTI_Administraciondepedidosydespachos = VariableFactory.bool("InversionTI_Administraciondepedidosydespachos", solver);
		BoolVar InversionTI_Gestiondecontactos = VariableFactory.bool("InversionTI_Gestiondecontactos", solver);
		BoolVar InversionTI_Ajustarprocesosdeflujodetrabajo = VariableFactory.bool("InversionTI_Ajustarprocesosdeflujodetrabajo", solver);
		BoolVar InversionTI_Mejorarcapacidadderespuesta = VariableFactory.bool("InversionTI_Mejorarcapacidadderespuesta", solver);
		BoolVar InversionTI_Gestionarpresupuestos = VariableFactory.bool("InversionTI_Gestionarpresupuestos", solver);
		BoolVar InversionTI_Crearyconsolidarinformes = VariableFactory.bool("InversionTI_Crearyconsolidarinformes", solver);
		BoolVar InversionTI_Buscartendenciasyrelaciones = VariableFactory.bool("InversionTI_Buscartendenciasyrelaciones", solver);
		BoolVar InversionTI_Compartirconocimiento = VariableFactory.bool("InversionTI_Compartirconocimiento", solver);
		BoolVar InversionTI_Organizarrecursosdeservicio = VariableFactory.bool("InversionTI_Organizarrecursosdeservicio", solver);
		BoolVar InversionTI_Facturacionydevolucion = VariableFactory.bool("InversionTI_Facturacionydevolucion", solver);
		BoolVar InversionTI_Cartera = VariableFactory.bool("InversionTI_Cartera", solver);
		BoolVar InversionTI_Administraciondepreciosydescuentos = VariableFactory.bool("InversionTI_Administraciondepreciosydescuentos", solver);
		BoolVar InversionTI_Administraciondepromociones = VariableFactory.bool("InversionTI_Administraciondepromociones", solver);
		BoolVar InversionTI_Administraciondecuotaseincentivos = VariableFactory.bool("InversionTI_Administraciondecuotaseincentivos", solver);
		BoolVar InversionTI_Administraciondevisitacomercial = VariableFactory.bool("InversionTI_Administraciondevisitacomercial", solver);
		BoolVar InversionTI_Importacionesyexportaciones = VariableFactory.bool("InversionTI_Importacionesyexportaciones", solver);
		BoolVar InversionTI_Gestionarcontratosdeservicio = VariableFactory.bool("InversionTI_Gestionarcontratosdeservicio", solver);
		BoolVar InversionTI_Presupuestarcostosytiempos = VariableFactory.bool("InversionTI_Presupuestarcostosytiempos", solver);
		BoolVar InversionTI_Automatizarlafacturacion = VariableFactory.bool("InversionTI_Automatizarlafacturacion", solver);
		BoolVar InversionTI_Predecirdisponibilidades = VariableFactory.bool("InversionTI_Predecirdisponibilidades", solver);
		BoolVar InversionTI_Seguimientodecostosyconsumos = VariableFactory.bool("InversionTI_Seguimientodecostosyconsumos", solver);
		BoolVar InversionTI_Planificarcapacidades = VariableFactory.bool("InversionTI_Planificarcapacidades", solver);
		BoolVar InversionTI_Planearygestionarcapacidaddebodegajeyalmacenamiento = VariableFactory.bool("InversionTI_Planearygestionarcapacidaddebodegajeyalmacenamiento", solver);
		BoolVar InversionTI_Gestiondetransportedemercancia = VariableFactory.bool("InversionTI_Gestiondetransportedemercancia", solver);
		BoolVar InversionTI_Logisticadetransporteinternacional = VariableFactory.bool("InversionTI_Logisticadetransporteinternacional", solver);
		BoolVar InversionTI_Gestionderelacionconproveedores = VariableFactory.bool("InversionTI_Gestionderelacionconproveedores", solver);
		BoolVar InversionTI_Gestiondelademanda = VariableFactory.bool("InversionTI_Gestiondelademanda", solver);
		BoolVar InversionTI_SistemasEmpresariales = VariableFactory.bool("InversionTI_SistemasEmpresariales", solver);
		BoolVar InversionTI_CRM_CustomerRelationshipManagement = VariableFactory.bool("InversionTI_CRM_CustomerRelationshipManagement", solver);
		BoolVar InversionTI_CRM_Modulomarketing = VariableFactory.bool("InversionTI_CRM_Modulomarketing", solver);
		BoolVar InversionTI_CRM_ModuloVentas = VariableFactory.bool("InversionTI_CRM_ModuloVentas", solver);
		BoolVar InversionTI_CRM_Modulodeclientes = VariableFactory.bool("InversionTI_CRM_Modulodeclientes", solver);
		BoolVar InversionTI_ERP_Enterpriseresourceplanning = VariableFactory.bool("InversionTI_ERP_Enterpriseresourceplanning", solver);
		BoolVar InversionTI_ERP_Modulorecursoshumanos = VariableFactory.bool("InversionTI_ERP_Modulorecursoshumanos", solver);
		BoolVar InversionTI_ERP_Modulofinanciero = VariableFactory.bool("InversionTI_ERP_Modulofinanciero", solver);
		BoolVar InversionTI_ERP_Moduloadministrativo = VariableFactory.bool("InversionTI_ERP_Moduloadministrativo", solver);
		BoolVar InversionTI_ERP_Modulodeproduccion = VariableFactory.bool("InversionTI_ERP_Modulodeproduccion", solver);
		BoolVar InversionTI_ERP_Modulodeclientes = VariableFactory.bool("InversionTI_ERP_Modulodeclientes", solver);
		BoolVar InversionTI_ERP_Modulodegestiondeabastecimiento = VariableFactory.bool("InversionTI_ERP_Modulodegestiondeabastecimiento", solver);
		BoolVar InversionTI_ERP_Modulodeinteligenciadenegocio = VariableFactory.bool("InversionTI_ERP_Modulodeinteligenciadenegocio", solver);
		BoolVar InversionTI_ERP_Marketingyventas = VariableFactory.bool("InversionTI_ERP_Marketingyventas", solver);
		BoolVar InversionTI_ERP_Modulodegestiondeproyectos = VariableFactory.bool("InversionTI_ERP_Modulodegestiondeproyectos", solver);
		BoolVar InversionTI_SCM_Sistemadegestiondeabastecimiento = VariableFactory.bool("InversionTI_SCM_Sistemadegestiondeabastecimiento", solver);
		BoolVar InversionTI_NuevovsExistente = VariableFactory.bool("InversionTI_NuevovsExistente", solver);
		BoolVar InversionTI_Adquirirsistemanuevo = VariableFactory.bool("InversionTI_Adquirirsistemanuevo", solver);
		BoolVar InversionTI_Adaptarsistemaexistente = VariableFactory.bool("InversionTI_Adaptarsistemaexistente", solver);
		BoolVar InversionTI_Tercerizacion = VariableFactory.bool("InversionTI_Tercerizacion", solver);
		BoolVar InversionTI_Subcontratarpersonalizacion = VariableFactory.bool("InversionTI_Subcontratarpersonalizacion", solver);
		BoolVar InversionTI_Subcontratarpartedeldesarrolloeintegracion = VariableFactory.bool("InversionTI_Subcontratarpartedeldesarrolloeintegracion", solver);
		BoolVar InversionTI_Subcontratarlaadministraciondeunprocesodenegociocompleto = VariableFactory.bool("InversionTI_Subcontratarlaadministraciondeunprocesodenegociocompleto", solver);
		BoolVar InversionTI_Subcontratargerenciadelproyectodeimplementacion = VariableFactory.bool("InversionTI_Subcontratargerenciadelproyectodeimplementacion", solver);
		BoolVar InversionTI_TipodeSolucion = VariableFactory.bool("InversionTI_TipodeSolucion", solver);
		BoolVar InversionTI_Comercial = VariableFactory.bool("InversionTI_Comercial", solver);
		BoolVar InversionTI_OpenSource = VariableFactory.bool("InversionTI_OpenSource", solver);
		BoolVar InversionTI_ModelodeDespliegue = VariableFactory.bool("InversionTI_ModelodeDespliegue", solver);
		BoolVar InversionTI_OnPremise = VariableFactory.bool("InversionTI_OnPremise", solver);
		BoolVar InversionTI_SoftwarecomoservicioSaaS = VariableFactory.bool("InversionTI_SoftwarecomoservicioSaaS", solver);
		BoolVar InversionTI_InfraestructuracomoservicioIaaS = VariableFactory.bool("InversionTI_InfraestructuracomoservicioIaaS", solver);
		BoolVar InversionTI_ModelodeImplementacion = VariableFactory.bool("InversionTI_ModelodeImplementacion", solver);
		BoolVar InversionTI_BigBang = VariableFactory.bool("InversionTI_BigBang", solver);
		BoolVar InversionTI_Implementacionporfases = VariableFactory.bool("InversionTI_Implementacionporfases", solver);
		BoolVar InversionTI_Implementacionporprocesos = VariableFactory.bool("InversionTI_Implementacionporprocesos", solver);
		BoolVar InversionTI_Mantenimiento = VariableFactory.bool("InversionTI_Mantenimiento", solver);
		BoolVar InversionTI_Contratoconelproveedor = VariableFactory.bool("InversionTI_Contratoconelproveedor", solver);
		BoolVar InversionTI_Contratoconunproveedorespecializado = VariableFactory.bool("InversionTI_Contratoconunproveedorespecializado", solver);
		BoolVar InversionTI_Mantenimientoporcuentapropia = VariableFactory.bool("InversionTI_Mantenimientoporcuentapropia", solver);
		BoolVar InversionTI_Sincontratodemantenimiento = VariableFactory.bool("InversionTI_Sincontratodemantenimiento", solver);
		BoolVar InversionTI_ModelodeSeleccion = VariableFactory.bool("InversionTI_ModelodeSeleccion", solver);
		BoolVar InversionTI_RFP_Requestforproposal = VariableFactory.bool("InversionTI_RFP_Requestforproposal", solver);
		BoolVar InversionTI_Consultoriaexterna = VariableFactory.bool("InversionTI_Consultoriaexterna", solver);
		BoolVar InversionTI_Evaluacioninterna = VariableFactory.bool("InversionTI_Evaluacioninterna", solver);
		BoolVar InversionTI_Plataforma = VariableFactory.bool("InversionTI_Plataforma", solver);
		BoolVar InversionTI_Sistemaempresarialbasadoenlamismaplataformatecnologica = VariableFactory.bool("InversionTI_Sistemaempresarialbasadoenlamismaplataformatecnologica", solver);
		BoolVar InversionTI_Sistemaempresarialbasadoenunaplataformadiferente = VariableFactory.bool("InversionTI_Sistemaempresarialbasadoenunaplataformadiferente", solver);
		BoolVar InversionTI_Integracion = VariableFactory.bool("InversionTI_Integracion", solver);
		BoolVar InversionTI_Middleware = VariableFactory.bool("InversionTI_Middleware", solver);
		BoolVar InversionTI_Desarrollopropio = VariableFactory.bool("InversionTI_Desarrollopropio", solver);
		BoolVar InversionTI_Proveedor = VariableFactory.bool("InversionTI_Proveedor", solver);
		BoolVar InversionTI_Financiacion = VariableFactory.bool("InversionTI_Financiacion", solver);
		BoolVar InversionTI_RecursosPropios = VariableFactory.bool("InversionTI_RecursosPropios", solver);
		BoolVar InversionTI_Credito = VariableFactory.bool("InversionTI_Credito", solver);
		BoolVar InversionTI_Leasing = VariableFactory.bool("InversionTI_Leasing", solver);
		
		
		//--------------------------------------------
		//Tree Constraint
		//--------------------------------------------
		solver.post(IntConstraintFactory.arithm(InversionTI_InversionTI, "=", InversionTI_MotivadoresdeNegocio));
		solver.post(IntConstraintFactory.arithm(InversionTI_InversionTI, "=", InversionTI_SistemasEmpresariales));
		solver.post(IntConstraintFactory.arithm(InversionTI_InversionTI, "=", InversionTI_NuevovsExistente));
		solver.post(IntConstraintFactory.arithm(InversionTI_InversionTI, "=", InversionTI_Tercerizacion));
		solver.post(IntConstraintFactory.arithm(InversionTI_InversionTI, "=", InversionTI_TipodeSolucion));
		solver.post(IntConstraintFactory.arithm(InversionTI_InversionTI, "=", InversionTI_ModelodeDespliegue));
		solver.post(IntConstraintFactory.arithm(InversionTI_InversionTI, "=", InversionTI_ModelodeImplementacion));
		solver.post(IntConstraintFactory.arithm(InversionTI_InversionTI, "=", InversionTI_Mantenimiento));
		solver.post(IntConstraintFactory.arithm(InversionTI_InversionTI, "=", InversionTI_ModelodeSeleccion));
		solver.post(IntConstraintFactory.arithm(InversionTI_InversionTI, "=", InversionTI_Plataforma));
		solver.post(IntConstraintFactory.arithm(InversionTI_InversionTI, "=", InversionTI_Integracion));
		solver.post(IntConstraintFactory.arithm(InversionTI_InversionTI, "=", InversionTI_Financiacion));
		IntVar sumOrInversionTI_MotivadoresdeNegocio = VariableFactory.enumerated("sumOrInversionTI_MotivadoresdeNegocio", 0, 83, solver); 
		BoolVar[] varsOrInversionTI_MotivadoresdeNegocio = new BoolVar[83];
		varsOrInversionTI_MotivadoresdeNegocio[0] = InversionTI_Segmentarydepurarclientes;
		varsOrInversionTI_MotivadoresdeNegocio[1] = InversionTI_Planificacionypresupuestosdemercadeo;
		varsOrInversionTI_MotivadoresdeNegocio[2] = InversionTI_Gestiondedatosylistas;
		varsOrInversionTI_MotivadoresdeNegocio[3] = InversionTI_Analisisdemarketing;
		varsOrInversionTI_MotivadoresdeNegocio[4] = InversionTI_GestiondeCampanias;
		varsOrInversionTI_MotivadoresdeNegocio[5] = InversionTI_Facilitartareasdemercadeoypublicidad;
		varsOrInversionTI_MotivadoresdeNegocio[6] = InversionTI_Gestionderespuestasyclientespotenciales;
		varsOrInversionTI_MotivadoresdeNegocio[7] = InversionTI_Reducirciclosdeventas;
		varsOrInversionTI_MotivadoresdeNegocio[8] = InversionTI_Aumentartasasdecierredeventas;
		varsOrInversionTI_MotivadoresdeNegocio[9] = InversionTI_Mejorarretenciondeclientes;
		varsOrInversionTI_MotivadoresdeNegocio[10] = InversionTI_Implementarnuevoprocesodeventas;
		varsOrInversionTI_MotivadoresdeNegocio[11] = InversionTI_Gestionarinformaciondeclientes;
		varsOrInversionTI_MotivadoresdeNegocio[12] = InversionTI_Gestiondecasosdeclientes;
		varsOrInversionTI_MotivadoresdeNegocio[13] = InversionTI_Historialdeserviciosdeclientes;
		varsOrInversionTI_MotivadoresdeNegocio[14] = InversionTI_Aumentarbasedeclientes;
		varsOrInversionTI_MotivadoresdeNegocio[15] = InversionTI_Implementarnuevoprocesodeatencionalcliente;
		varsOrInversionTI_MotivadoresdeNegocio[16] = InversionTI_Mejorarconocimientodelcliente;
		varsOrInversionTI_MotivadoresdeNegocio[17] = InversionTI_Medirsatisfacciondelconsumidor;
		varsOrInversionTI_MotivadoresdeNegocio[18] = InversionTI_Controlsobrerecursoshumanos;
		varsOrInversionTI_MotivadoresdeNegocio[19] = InversionTI_Nuevosprocesosderecursoshumanos;
		varsOrInversionTI_MotivadoresdeNegocio[20] = InversionTI_Reclutamiento;
		varsOrInversionTI_MotivadoresdeNegocio[21] = InversionTI_Biodata_hojasdevida;
		varsOrInversionTI_MotivadoresdeNegocio[22] = InversionTI_Analisisdecargos_estructuraorganizacional;
		varsOrInversionTI_MotivadoresdeNegocio[23] = InversionTI_Nominayadministraciondesalarios;
		varsOrInversionTI_MotivadoresdeNegocio[24] = InversionTI_Educacionycapacitacion;
		varsOrInversionTI_MotivadoresdeNegocio[25] = InversionTI_Saludocupacional;
		varsOrInversionTI_MotivadoresdeNegocio[26] = InversionTI_Modelamientodeprocesosyorganigramas;
		varsOrInversionTI_MotivadoresdeNegocio[27] = InversionTI_Nuevosprocesosfinancieros;
		varsOrInversionTI_MotivadoresdeNegocio[28] = InversionTI_Implementarcontrolessobreprocesosfinancieros;
		varsOrInversionTI_MotivadoresdeNegocio[29] = InversionTI_Gestioncontable;
		varsOrInversionTI_MotivadoresdeNegocio[30] = InversionTI_Manejodecuentasporpagar_Proveedores;
		varsOrInversionTI_MotivadoresdeNegocio[31] = InversionTI_Sistemasdecosteo;
		varsOrInversionTI_MotivadoresdeNegocio[32] = InversionTI_Administraciondeactivosfijos;
		varsOrInversionTI_MotivadoresdeNegocio[33] = InversionTI_Manejodeconciliacionesbancarias;
		varsOrInversionTI_MotivadoresdeNegocio[34] = InversionTI_Controldeinversiones;
		varsOrInversionTI_MotivadoresdeNegocio[35] = InversionTI_Manejodeobligacionesfinancieras;
		varsOrInversionTI_MotivadoresdeNegocio[36] = InversionTI_Tesoreria;
		varsOrInversionTI_MotivadoresdeNegocio[37] = InversionTI_Contabilidadanalitica;
		varsOrInversionTI_MotivadoresdeNegocio[38] = InversionTI_Controlyadministraciondelpresupuesto;
		varsOrInversionTI_MotivadoresdeNegocio[39] = InversionTI_Manejodeactivosdecapital;
		varsOrInversionTI_MotivadoresdeNegocio[40] = InversionTI_Manejodeinventarios;
		varsOrInversionTI_MotivadoresdeNegocio[41] = InversionTI_Manejodealmacen;
		varsOrInversionTI_MotivadoresdeNegocio[42] = InversionTI_Gestiondecompras;
		varsOrInversionTI_MotivadoresdeNegocio[43] = InversionTI_Gestiondeactivosfijos;
		varsOrInversionTI_MotivadoresdeNegocio[44] = InversionTI_Comercioexterior;
		varsOrInversionTI_MotivadoresdeNegocio[45] = InversionTI_Seguros;
		varsOrInversionTI_MotivadoresdeNegocio[46] = InversionTI_Manejodeordenesdeproduccion;
		varsOrInversionTI_MotivadoresdeNegocio[47] = InversionTI_Manejodeordenesdecompra;
		varsOrInversionTI_MotivadoresdeNegocio[48] = InversionTI_Planificaciondenecesidadesdecapacidad;
		varsOrInversionTI_MotivadoresdeNegocio[49] = InversionTI_Planificaciondesuministros;
		varsOrInversionTI_MotivadoresdeNegocio[50] = InversionTI_Disminuirtiemposdeentrega;
		varsOrInversionTI_MotivadoresdeNegocio[51] = InversionTI_Integracionconproveedores;
		varsOrInversionTI_MotivadoresdeNegocio[52] = InversionTI_Gestiondeproveedores;
		varsOrInversionTI_MotivadoresdeNegocio[53] = InversionTI_Administraciondemateriasprimas;
		varsOrInversionTI_MotivadoresdeNegocio[54] = InversionTI_Gestiondebodega;
		varsOrInversionTI_MotivadoresdeNegocio[55] = InversionTI_Realizarcontroldecostos;
		varsOrInversionTI_MotivadoresdeNegocio[56] = InversionTI_Administraciondepedidosydespachos;
		varsOrInversionTI_MotivadoresdeNegocio[57] = InversionTI_Gestiondecontactos;
		varsOrInversionTI_MotivadoresdeNegocio[58] = InversionTI_Ajustarprocesosdeflujodetrabajo;
		varsOrInversionTI_MotivadoresdeNegocio[59] = InversionTI_Mejorarcapacidadderespuesta;
		varsOrInversionTI_MotivadoresdeNegocio[60] = InversionTI_Gestionarpresupuestos;
		varsOrInversionTI_MotivadoresdeNegocio[61] = InversionTI_Crearyconsolidarinformes;
		varsOrInversionTI_MotivadoresdeNegocio[62] = InversionTI_Buscartendenciasyrelaciones;
		varsOrInversionTI_MotivadoresdeNegocio[63] = InversionTI_Compartirconocimiento;
		varsOrInversionTI_MotivadoresdeNegocio[64] = InversionTI_Organizarrecursosdeservicio;
		varsOrInversionTI_MotivadoresdeNegocio[65] = InversionTI_Facturacionydevolucion;
		varsOrInversionTI_MotivadoresdeNegocio[66] = InversionTI_Cartera;
		varsOrInversionTI_MotivadoresdeNegocio[67] = InversionTI_Administraciondepreciosydescuentos;
		varsOrInversionTI_MotivadoresdeNegocio[68] = InversionTI_Administraciondepromociones;
		varsOrInversionTI_MotivadoresdeNegocio[69] = InversionTI_Administraciondecuotaseincentivos;
		varsOrInversionTI_MotivadoresdeNegocio[70] = InversionTI_Administraciondevisitacomercial;
		varsOrInversionTI_MotivadoresdeNegocio[71] = InversionTI_Importacionesyexportaciones;
		varsOrInversionTI_MotivadoresdeNegocio[72] = InversionTI_Gestionarcontratosdeservicio;
		varsOrInversionTI_MotivadoresdeNegocio[73] = InversionTI_Presupuestarcostosytiempos;
		varsOrInversionTI_MotivadoresdeNegocio[74] = InversionTI_Automatizarlafacturacion;
		varsOrInversionTI_MotivadoresdeNegocio[75] = InversionTI_Predecirdisponibilidades;
		varsOrInversionTI_MotivadoresdeNegocio[76] = InversionTI_Seguimientodecostosyconsumos;
		varsOrInversionTI_MotivadoresdeNegocio[77] = InversionTI_Planificarcapacidades;
		varsOrInversionTI_MotivadoresdeNegocio[78] = InversionTI_Planearygestionarcapacidaddebodegajeyalmacenamiento;
		varsOrInversionTI_MotivadoresdeNegocio[79] = InversionTI_Gestiondetransportedemercancia;
		varsOrInversionTI_MotivadoresdeNegocio[80] = InversionTI_Logisticadetransporteinternacional;
		varsOrInversionTI_MotivadoresdeNegocio[81] = InversionTI_Gestionderelacionconproveedores;
		varsOrInversionTI_MotivadoresdeNegocio[82] = InversionTI_Gestiondelademanda;
		solver.post(IntConstraintFactory.sum(varsOrInversionTI_MotivadoresdeNegocio, sumOrInversionTI_MotivadoresdeNegocio));
		LogicalConstraintFactory.ifThenElse(InversionTI_MotivadoresdeNegocio, IntConstraintFactory.arithm(sumOrInversionTI_MotivadoresdeNegocio, ">=", 1), IntConstraintFactory.arithm(sumOrInversionTI_MotivadoresdeNegocio, "=", 0));
		IntVar sumXorInversionTI_SistemasEmpresariales = VariableFactory.fixed("sumXorInversionTI_SistemasEmpresariales", 1, solver);
		BoolVar[] varsXorInversionTI_SistemasEmpresariales = new BoolVar[3];
		varsXorInversionTI_SistemasEmpresariales[0] = InversionTI_CRM_CustomerRelationshipManagement;
		varsXorInversionTI_SistemasEmpresariales[1] = InversionTI_ERP_Enterpriseresourceplanning;
		varsXorInversionTI_SistemasEmpresariales[2] = InversionTI_SCM_Sistemadegestiondeabastecimiento;
		LogicalConstraintFactory.ifThen(InversionTI_SistemasEmpresariales, IntConstraintFactory.sum(varsXorInversionTI_SistemasEmpresariales, sumXorInversionTI_SistemasEmpresariales));
		IntVar sumOrInversionTI_CRM_CustomerRelationshipManagement = VariableFactory.enumerated("sumOrInversionTI_CRM_CustomerRelationshipManagement", 0, 3, solver); 
		BoolVar[] varsOrInversionTI_CRM_CustomerRelationshipManagement = new BoolVar[3];
		varsOrInversionTI_CRM_CustomerRelationshipManagement[0] = InversionTI_CRM_Modulomarketing;
		varsOrInversionTI_CRM_CustomerRelationshipManagement[1] = InversionTI_CRM_ModuloVentas;
		varsOrInversionTI_CRM_CustomerRelationshipManagement[2] = InversionTI_CRM_Modulodeclientes;
		solver.post(IntConstraintFactory.sum(varsOrInversionTI_CRM_CustomerRelationshipManagement, sumOrInversionTI_CRM_CustomerRelationshipManagement));
		LogicalConstraintFactory.ifThenElse(InversionTI_CRM_CustomerRelationshipManagement, IntConstraintFactory.arithm(sumOrInversionTI_CRM_CustomerRelationshipManagement, ">=", 1), IntConstraintFactory.arithm(sumOrInversionTI_CRM_CustomerRelationshipManagement, "=", 0));
		IntVar sumOrInversionTI_ERP_Enterpriseresourceplanning = VariableFactory.enumerated("sumOrInversionTI_ERP_Enterpriseresourceplanning", 0, 9, solver); 
		BoolVar[] varsOrInversionTI_ERP_Enterpriseresourceplanning = new BoolVar[9];
		varsOrInversionTI_ERP_Enterpriseresourceplanning[0] = InversionTI_ERP_Modulorecursoshumanos;
		varsOrInversionTI_ERP_Enterpriseresourceplanning[1] = InversionTI_ERP_Modulofinanciero;
		varsOrInversionTI_ERP_Enterpriseresourceplanning[2] = InversionTI_ERP_Moduloadministrativo;
		varsOrInversionTI_ERP_Enterpriseresourceplanning[3] = InversionTI_ERP_Modulodeproduccion;
		varsOrInversionTI_ERP_Enterpriseresourceplanning[4] = InversionTI_ERP_Modulodeclientes;
		varsOrInversionTI_ERP_Enterpriseresourceplanning[5] = InversionTI_ERP_Modulodegestiondeabastecimiento;
		varsOrInversionTI_ERP_Enterpriseresourceplanning[6] = InversionTI_ERP_Modulodeinteligenciadenegocio;
		varsOrInversionTI_ERP_Enterpriseresourceplanning[7] = InversionTI_ERP_Marketingyventas;
		varsOrInversionTI_ERP_Enterpriseresourceplanning[8] = InversionTI_ERP_Modulodegestiondeproyectos;
		solver.post(IntConstraintFactory.sum(varsOrInversionTI_ERP_Enterpriseresourceplanning, sumOrInversionTI_ERP_Enterpriseresourceplanning));
		LogicalConstraintFactory.ifThenElse(InversionTI_ERP_Enterpriseresourceplanning, IntConstraintFactory.arithm(sumOrInversionTI_ERP_Enterpriseresourceplanning, ">=", 1), IntConstraintFactory.arithm(sumOrInversionTI_ERP_Enterpriseresourceplanning, "=", 0));
		IntVar sumXorInversionTI_NuevovsExistente = VariableFactory.fixed("sumXorInversionTI_NuevovsExistente", 1, solver);
		BoolVar[] varsXorInversionTI_NuevovsExistente = new BoolVar[2];
		varsXorInversionTI_NuevovsExistente[0] = InversionTI_Adquirirsistemanuevo;
		varsXorInversionTI_NuevovsExistente[1] = InversionTI_Adaptarsistemaexistente;
		LogicalConstraintFactory.ifThen(InversionTI_NuevovsExistente, IntConstraintFactory.sum(varsXorInversionTI_NuevovsExistente, sumXorInversionTI_NuevovsExistente));
		IntVar sumXorInversionTI_Tercerizacion = VariableFactory.fixed("sumXorInversionTI_Tercerizacion", 1, solver);
		BoolVar[] varsXorInversionTI_Tercerizacion = new BoolVar[4];
		varsXorInversionTI_Tercerizacion[0] = InversionTI_Subcontratarpersonalizacion;
		varsXorInversionTI_Tercerizacion[1] = InversionTI_Subcontratarpartedeldesarrolloeintegracion;
		varsXorInversionTI_Tercerizacion[2] = InversionTI_Subcontratarlaadministraciondeunprocesodenegociocompleto;
		varsXorInversionTI_Tercerizacion[3] = InversionTI_Subcontratargerenciadelproyectodeimplementacion;
		LogicalConstraintFactory.ifThen(InversionTI_Tercerizacion, IntConstraintFactory.sum(varsXorInversionTI_Tercerizacion, sumXorInversionTI_Tercerizacion));
		IntVar sumXorInversionTI_TipodeSolucion = VariableFactory.fixed("sumXorInversionTI_TipodeSolucion", 1, solver);
		BoolVar[] varsXorInversionTI_TipodeSolucion = new BoolVar[2];
		varsXorInversionTI_TipodeSolucion[0] = InversionTI_Comercial;
		varsXorInversionTI_TipodeSolucion[1] = InversionTI_OpenSource;
		LogicalConstraintFactory.ifThen(InversionTI_TipodeSolucion, IntConstraintFactory.sum(varsXorInversionTI_TipodeSolucion, sumXorInversionTI_TipodeSolucion));
		IntVar sumXorInversionTI_ModelodeDespliegue = VariableFactory.fixed("sumXorInversionTI_ModelodeDespliegue", 1, solver);
		BoolVar[] varsXorInversionTI_ModelodeDespliegue = new BoolVar[3];
		varsXorInversionTI_ModelodeDespliegue[0] = InversionTI_OnPremise;
		varsXorInversionTI_ModelodeDespliegue[1] = InversionTI_SoftwarecomoservicioSaaS;
		varsXorInversionTI_ModelodeDespliegue[2] = InversionTI_InfraestructuracomoservicioIaaS;
		LogicalConstraintFactory.ifThen(InversionTI_ModelodeDespliegue, IntConstraintFactory.sum(varsXorInversionTI_ModelodeDespliegue, sumXorInversionTI_ModelodeDespliegue));
		IntVar sumXorInversionTI_ModelodeImplementacion = VariableFactory.fixed("sumXorInversionTI_ModelodeImplementacion", 1, solver);
		BoolVar[] varsXorInversionTI_ModelodeImplementacion = new BoolVar[3];
		varsXorInversionTI_ModelodeImplementacion[0] = InversionTI_BigBang;
		varsXorInversionTI_ModelodeImplementacion[1] = InversionTI_Implementacionporfases;
		varsXorInversionTI_ModelodeImplementacion[2] = InversionTI_Implementacionporprocesos;
		LogicalConstraintFactory.ifThen(InversionTI_ModelodeImplementacion, IntConstraintFactory.sum(varsXorInversionTI_ModelodeImplementacion, sumXorInversionTI_ModelodeImplementacion));
		IntVar sumXorInversionTI_Mantenimiento = VariableFactory.fixed("sumXorInversionTI_Mantenimiento", 1, solver);
		BoolVar[] varsXorInversionTI_Mantenimiento = new BoolVar[4];
		varsXorInversionTI_Mantenimiento[0] = InversionTI_Contratoconelproveedor;
		varsXorInversionTI_Mantenimiento[1] = InversionTI_Contratoconunproveedorespecializado;
		varsXorInversionTI_Mantenimiento[2] = InversionTI_Mantenimientoporcuentapropia;
		varsXorInversionTI_Mantenimiento[3] = InversionTI_Sincontratodemantenimiento;
		LogicalConstraintFactory.ifThen(InversionTI_Mantenimiento, IntConstraintFactory.sum(varsXorInversionTI_Mantenimiento, sumXorInversionTI_Mantenimiento));
		IntVar sumXorInversionTI_ModelodeSeleccion = VariableFactory.fixed("sumXorInversionTI_ModelodeSeleccion", 1, solver);
		BoolVar[] varsXorInversionTI_ModelodeSeleccion = new BoolVar[3];
		varsXorInversionTI_ModelodeSeleccion[0] = InversionTI_RFP_Requestforproposal;
		varsXorInversionTI_ModelodeSeleccion[1] = InversionTI_Consultoriaexterna;
		varsXorInversionTI_ModelodeSeleccion[2] = InversionTI_Evaluacioninterna;
		LogicalConstraintFactory.ifThen(InversionTI_ModelodeSeleccion, IntConstraintFactory.sum(varsXorInversionTI_ModelodeSeleccion, sumXorInversionTI_ModelodeSeleccion));
		IntVar sumXorInversionTI_Plataforma = VariableFactory.fixed("sumXorInversionTI_Plataforma", 1, solver);
		BoolVar[] varsXorInversionTI_Plataforma = new BoolVar[2];
		varsXorInversionTI_Plataforma[0] = InversionTI_Sistemaempresarialbasadoenlamismaplataformatecnologica;
		varsXorInversionTI_Plataforma[1] = InversionTI_Sistemaempresarialbasadoenunaplataformadiferente;
		LogicalConstraintFactory.ifThen(InversionTI_Plataforma, IntConstraintFactory.sum(varsXorInversionTI_Plataforma, sumXorInversionTI_Plataforma));
		IntVar sumXorInversionTI_Integracion = VariableFactory.fixed("sumXorInversionTI_Integracion", 1, solver);
		BoolVar[] varsXorInversionTI_Integracion = new BoolVar[3];
		varsXorInversionTI_Integracion[0] = InversionTI_Middleware;
		varsXorInversionTI_Integracion[1] = InversionTI_Desarrollopropio;
		varsXorInversionTI_Integracion[2] = InversionTI_Proveedor;
		LogicalConstraintFactory.ifThen(InversionTI_Integracion, IntConstraintFactory.sum(varsXorInversionTI_Integracion, sumXorInversionTI_Integracion));
		IntVar sumXorInversionTI_Financiacion = VariableFactory.fixed("sumXorInversionTI_Financiacion", 1, solver);
		BoolVar[] varsXorInversionTI_Financiacion = new BoolVar[3];
		varsXorInversionTI_Financiacion[0] = InversionTI_RecursosPropios;
		varsXorInversionTI_Financiacion[1] = InversionTI_Credito;
		varsXorInversionTI_Financiacion[2] = InversionTI_Leasing;
		LogicalConstraintFactory.ifThen(InversionTI_Financiacion, IntConstraintFactory.sum(varsXorInversionTI_Financiacion, sumXorInversionTI_Financiacion));
		IntVar sumParentChildInversionTI_InversionTI = VariableFactory.fixed("sumParentChildInversionTI_InversionTI", 0, solver); 
		BoolVar[] varsParentChildInversionTI_InversionTI = new BoolVar[12];
		SatFactory.addClauses(LogOp.implies(InversionTI_MotivadoresdeNegocio, InversionTI_InversionTI), solver);
		varsParentChildInversionTI_InversionTI[0] = InversionTI_MotivadoresdeNegocio;
		IntVar sumParentChildInversionTI_MotivadoresdeNegocio = VariableFactory.fixed("sumParentChildInversionTI_MotivadoresdeNegocio", 0, solver); 
		BoolVar[] varsParentChildInversionTI_MotivadoresdeNegocio = new BoolVar[83];
		SatFactory.addClauses(LogOp.implies(InversionTI_Segmentarydepurarclientes, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[0] = InversionTI_Segmentarydepurarclientes;
		SatFactory.addClauses(LogOp.implies(InversionTI_Planificacionypresupuestosdemercadeo, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[1] = InversionTI_Planificacionypresupuestosdemercadeo;
		SatFactory.addClauses(LogOp.implies(InversionTI_Gestiondedatosylistas, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[2] = InversionTI_Gestiondedatosylistas;
		SatFactory.addClauses(LogOp.implies(InversionTI_Analisisdemarketing, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[3] = InversionTI_Analisisdemarketing;
		SatFactory.addClauses(LogOp.implies(InversionTI_GestiondeCampanias, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[4] = InversionTI_GestiondeCampanias;
		SatFactory.addClauses(LogOp.implies(InversionTI_Facilitartareasdemercadeoypublicidad, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[5] = InversionTI_Facilitartareasdemercadeoypublicidad;
		SatFactory.addClauses(LogOp.implies(InversionTI_Gestionderespuestasyclientespotenciales, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[6] = InversionTI_Gestionderespuestasyclientespotenciales;
		SatFactory.addClauses(LogOp.implies(InversionTI_Reducirciclosdeventas, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[7] = InversionTI_Reducirciclosdeventas;
		SatFactory.addClauses(LogOp.implies(InversionTI_Aumentartasasdecierredeventas, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[8] = InversionTI_Aumentartasasdecierredeventas;
		SatFactory.addClauses(LogOp.implies(InversionTI_Mejorarretenciondeclientes, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[9] = InversionTI_Mejorarretenciondeclientes;
		SatFactory.addClauses(LogOp.implies(InversionTI_Implementarnuevoprocesodeventas, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[10] = InversionTI_Implementarnuevoprocesodeventas;
		SatFactory.addClauses(LogOp.implies(InversionTI_Gestionarinformaciondeclientes, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[11] = InversionTI_Gestionarinformaciondeclientes;
		SatFactory.addClauses(LogOp.implies(InversionTI_Gestiondecasosdeclientes, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[12] = InversionTI_Gestiondecasosdeclientes;
		SatFactory.addClauses(LogOp.implies(InversionTI_Historialdeserviciosdeclientes, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[13] = InversionTI_Historialdeserviciosdeclientes;
		SatFactory.addClauses(LogOp.implies(InversionTI_Aumentarbasedeclientes, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[14] = InversionTI_Aumentarbasedeclientes;
		SatFactory.addClauses(LogOp.implies(InversionTI_Implementarnuevoprocesodeatencionalcliente, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[15] = InversionTI_Implementarnuevoprocesodeatencionalcliente;
		SatFactory.addClauses(LogOp.implies(InversionTI_Mejorarconocimientodelcliente, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[16] = InversionTI_Mejorarconocimientodelcliente;
		SatFactory.addClauses(LogOp.implies(InversionTI_Medirsatisfacciondelconsumidor, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[17] = InversionTI_Medirsatisfacciondelconsumidor;
		SatFactory.addClauses(LogOp.implies(InversionTI_Controlsobrerecursoshumanos, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[18] = InversionTI_Controlsobrerecursoshumanos;
		SatFactory.addClauses(LogOp.implies(InversionTI_Nuevosprocesosderecursoshumanos, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[19] = InversionTI_Nuevosprocesosderecursoshumanos;
		SatFactory.addClauses(LogOp.implies(InversionTI_Reclutamiento, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[20] = InversionTI_Reclutamiento;
		SatFactory.addClauses(LogOp.implies(InversionTI_Biodata_hojasdevida, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[21] = InversionTI_Biodata_hojasdevida;
		SatFactory.addClauses(LogOp.implies(InversionTI_Analisisdecargos_estructuraorganizacional, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[22] = InversionTI_Analisisdecargos_estructuraorganizacional;
		SatFactory.addClauses(LogOp.implies(InversionTI_Nominayadministraciondesalarios, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[23] = InversionTI_Nominayadministraciondesalarios;
		SatFactory.addClauses(LogOp.implies(InversionTI_Educacionycapacitacion, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[24] = InversionTI_Educacionycapacitacion;
		SatFactory.addClauses(LogOp.implies(InversionTI_Saludocupacional, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[25] = InversionTI_Saludocupacional;
		SatFactory.addClauses(LogOp.implies(InversionTI_Modelamientodeprocesosyorganigramas, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[26] = InversionTI_Modelamientodeprocesosyorganigramas;
		SatFactory.addClauses(LogOp.implies(InversionTI_Nuevosprocesosfinancieros, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[27] = InversionTI_Nuevosprocesosfinancieros;
		SatFactory.addClauses(LogOp.implies(InversionTI_Implementarcontrolessobreprocesosfinancieros, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[28] = InversionTI_Implementarcontrolessobreprocesosfinancieros;
		SatFactory.addClauses(LogOp.implies(InversionTI_Gestioncontable, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[29] = InversionTI_Gestioncontable;
		SatFactory.addClauses(LogOp.implies(InversionTI_Manejodecuentasporpagar_Proveedores, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[30] = InversionTI_Manejodecuentasporpagar_Proveedores;
		SatFactory.addClauses(LogOp.implies(InversionTI_Sistemasdecosteo, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[31] = InversionTI_Sistemasdecosteo;
		SatFactory.addClauses(LogOp.implies(InversionTI_Administraciondeactivosfijos, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[32] = InversionTI_Administraciondeactivosfijos;
		SatFactory.addClauses(LogOp.implies(InversionTI_Manejodeconciliacionesbancarias, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[33] = InversionTI_Manejodeconciliacionesbancarias;
		SatFactory.addClauses(LogOp.implies(InversionTI_Controldeinversiones, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[34] = InversionTI_Controldeinversiones;
		SatFactory.addClauses(LogOp.implies(InversionTI_Manejodeobligacionesfinancieras, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[35] = InversionTI_Manejodeobligacionesfinancieras;
		SatFactory.addClauses(LogOp.implies(InversionTI_Tesoreria, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[36] = InversionTI_Tesoreria;
		SatFactory.addClauses(LogOp.implies(InversionTI_Contabilidadanalitica, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[37] = InversionTI_Contabilidadanalitica;
		SatFactory.addClauses(LogOp.implies(InversionTI_Controlyadministraciondelpresupuesto, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[38] = InversionTI_Controlyadministraciondelpresupuesto;
		SatFactory.addClauses(LogOp.implies(InversionTI_Manejodeactivosdecapital, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[39] = InversionTI_Manejodeactivosdecapital;
		SatFactory.addClauses(LogOp.implies(InversionTI_Manejodeinventarios, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[40] = InversionTI_Manejodeinventarios;
		SatFactory.addClauses(LogOp.implies(InversionTI_Manejodealmacen, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[41] = InversionTI_Manejodealmacen;
		SatFactory.addClauses(LogOp.implies(InversionTI_Gestiondecompras, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[42] = InversionTI_Gestiondecompras;
		SatFactory.addClauses(LogOp.implies(InversionTI_Gestiondeactivosfijos, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[43] = InversionTI_Gestiondeactivosfijos;
		SatFactory.addClauses(LogOp.implies(InversionTI_Comercioexterior, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[44] = InversionTI_Comercioexterior;
		SatFactory.addClauses(LogOp.implies(InversionTI_Seguros, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[45] = InversionTI_Seguros;
		SatFactory.addClauses(LogOp.implies(InversionTI_Manejodeordenesdeproduccion, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[46] = InversionTI_Manejodeordenesdeproduccion;
		SatFactory.addClauses(LogOp.implies(InversionTI_Manejodeordenesdecompra, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[47] = InversionTI_Manejodeordenesdecompra;
		SatFactory.addClauses(LogOp.implies(InversionTI_Planificaciondenecesidadesdecapacidad, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[48] = InversionTI_Planificaciondenecesidadesdecapacidad;
		SatFactory.addClauses(LogOp.implies(InversionTI_Planificaciondesuministros, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[49] = InversionTI_Planificaciondesuministros;
		SatFactory.addClauses(LogOp.implies(InversionTI_Disminuirtiemposdeentrega, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[50] = InversionTI_Disminuirtiemposdeentrega;
		SatFactory.addClauses(LogOp.implies(InversionTI_Integracionconproveedores, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[51] = InversionTI_Integracionconproveedores;
		SatFactory.addClauses(LogOp.implies(InversionTI_Gestiondeproveedores, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[52] = InversionTI_Gestiondeproveedores;
		SatFactory.addClauses(LogOp.implies(InversionTI_Administraciondemateriasprimas, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[53] = InversionTI_Administraciondemateriasprimas;
		SatFactory.addClauses(LogOp.implies(InversionTI_Gestiondebodega, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[54] = InversionTI_Gestiondebodega;
		SatFactory.addClauses(LogOp.implies(InversionTI_Realizarcontroldecostos, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[55] = InversionTI_Realizarcontroldecostos;
		SatFactory.addClauses(LogOp.implies(InversionTI_Administraciondepedidosydespachos, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[56] = InversionTI_Administraciondepedidosydespachos;
		SatFactory.addClauses(LogOp.implies(InversionTI_Gestiondecontactos, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[57] = InversionTI_Gestiondecontactos;
		SatFactory.addClauses(LogOp.implies(InversionTI_Ajustarprocesosdeflujodetrabajo, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[58] = InversionTI_Ajustarprocesosdeflujodetrabajo;
		SatFactory.addClauses(LogOp.implies(InversionTI_Mejorarcapacidadderespuesta, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[59] = InversionTI_Mejorarcapacidadderespuesta;
		SatFactory.addClauses(LogOp.implies(InversionTI_Gestionarpresupuestos, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[60] = InversionTI_Gestionarpresupuestos;
		SatFactory.addClauses(LogOp.implies(InversionTI_Crearyconsolidarinformes, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[61] = InversionTI_Crearyconsolidarinformes;
		SatFactory.addClauses(LogOp.implies(InversionTI_Buscartendenciasyrelaciones, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[62] = InversionTI_Buscartendenciasyrelaciones;
		SatFactory.addClauses(LogOp.implies(InversionTI_Compartirconocimiento, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[63] = InversionTI_Compartirconocimiento;
		SatFactory.addClauses(LogOp.implies(InversionTI_Organizarrecursosdeservicio, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[64] = InversionTI_Organizarrecursosdeservicio;
		SatFactory.addClauses(LogOp.implies(InversionTI_Facturacionydevolucion, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[65] = InversionTI_Facturacionydevolucion;
		SatFactory.addClauses(LogOp.implies(InversionTI_Cartera, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[66] = InversionTI_Cartera;
		SatFactory.addClauses(LogOp.implies(InversionTI_Administraciondepreciosydescuentos, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[67] = InversionTI_Administraciondepreciosydescuentos;
		SatFactory.addClauses(LogOp.implies(InversionTI_Administraciondepromociones, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[68] = InversionTI_Administraciondepromociones;
		SatFactory.addClauses(LogOp.implies(InversionTI_Administraciondecuotaseincentivos, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[69] = InversionTI_Administraciondecuotaseincentivos;
		SatFactory.addClauses(LogOp.implies(InversionTI_Administraciondevisitacomercial, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[70] = InversionTI_Administraciondevisitacomercial;
		SatFactory.addClauses(LogOp.implies(InversionTI_Importacionesyexportaciones, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[71] = InversionTI_Importacionesyexportaciones;
		SatFactory.addClauses(LogOp.implies(InversionTI_Gestionarcontratosdeservicio, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[72] = InversionTI_Gestionarcontratosdeservicio;
		SatFactory.addClauses(LogOp.implies(InversionTI_Presupuestarcostosytiempos, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[73] = InversionTI_Presupuestarcostosytiempos;
		SatFactory.addClauses(LogOp.implies(InversionTI_Automatizarlafacturacion, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[74] = InversionTI_Automatizarlafacturacion;
		SatFactory.addClauses(LogOp.implies(InversionTI_Predecirdisponibilidades, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[75] = InversionTI_Predecirdisponibilidades;
		SatFactory.addClauses(LogOp.implies(InversionTI_Seguimientodecostosyconsumos, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[76] = InversionTI_Seguimientodecostosyconsumos;
		SatFactory.addClauses(LogOp.implies(InversionTI_Planificarcapacidades, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[77] = InversionTI_Planificarcapacidades;
		SatFactory.addClauses(LogOp.implies(InversionTI_Planearygestionarcapacidaddebodegajeyalmacenamiento, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[78] = InversionTI_Planearygestionarcapacidaddebodegajeyalmacenamiento;
		SatFactory.addClauses(LogOp.implies(InversionTI_Gestiondetransportedemercancia, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[79] = InversionTI_Gestiondetransportedemercancia;
		SatFactory.addClauses(LogOp.implies(InversionTI_Logisticadetransporteinternacional, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[80] = InversionTI_Logisticadetransporteinternacional;
		SatFactory.addClauses(LogOp.implies(InversionTI_Gestionderelacionconproveedores, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[81] = InversionTI_Gestionderelacionconproveedores;
		SatFactory.addClauses(LogOp.implies(InversionTI_Gestiondelademanda, InversionTI_MotivadoresdeNegocio), solver);
		varsParentChildInversionTI_MotivadoresdeNegocio[82] = InversionTI_Gestiondelademanda;
		LogicalConstraintFactory.ifThen(IntConstraintFactory.arithm(InversionTI_MotivadoresdeNegocio, "=", 0), IntConstraintFactory.sum(varsParentChildInversionTI_MotivadoresdeNegocio, sumParentChildInversionTI_MotivadoresdeNegocio));
		SatFactory.addClauses(LogOp.implies(InversionTI_SistemasEmpresariales, InversionTI_InversionTI), solver);
		varsParentChildInversionTI_InversionTI[1] = InversionTI_SistemasEmpresariales;
		IntVar sumParentChildInversionTI_SistemasEmpresariales = VariableFactory.fixed("sumParentChildInversionTI_SistemasEmpresariales", 0, solver); 
		BoolVar[] varsParentChildInversionTI_SistemasEmpresariales = new BoolVar[3];
		SatFactory.addClauses(LogOp.implies(InversionTI_CRM_CustomerRelationshipManagement, InversionTI_SistemasEmpresariales), solver);
		varsParentChildInversionTI_SistemasEmpresariales[0] = InversionTI_CRM_CustomerRelationshipManagement;
		IntVar sumParentChildInversionTI_CRM_CustomerRelationshipManagement = VariableFactory.fixed("sumParentChildInversionTI_CRM_CustomerRelationshipManagement", 0, solver); 
		BoolVar[] varsParentChildInversionTI_CRM_CustomerRelationshipManagement = new BoolVar[3];
		SatFactory.addClauses(LogOp.implies(InversionTI_CRM_Modulomarketing, InversionTI_CRM_CustomerRelationshipManagement), solver);
		varsParentChildInversionTI_CRM_CustomerRelationshipManagement[0] = InversionTI_CRM_Modulomarketing;
		SatFactory.addClauses(LogOp.implies(InversionTI_CRM_ModuloVentas, InversionTI_CRM_CustomerRelationshipManagement), solver);
		varsParentChildInversionTI_CRM_CustomerRelationshipManagement[1] = InversionTI_CRM_ModuloVentas;
		SatFactory.addClauses(LogOp.implies(InversionTI_CRM_Modulodeclientes, InversionTI_CRM_CustomerRelationshipManagement), solver);
		varsParentChildInversionTI_CRM_CustomerRelationshipManagement[2] = InversionTI_CRM_Modulodeclientes;
		LogicalConstraintFactory.ifThen(IntConstraintFactory.arithm(InversionTI_CRM_CustomerRelationshipManagement, "=", 0), IntConstraintFactory.sum(varsParentChildInversionTI_CRM_CustomerRelationshipManagement, sumParentChildInversionTI_CRM_CustomerRelationshipManagement));
		SatFactory.addClauses(LogOp.implies(InversionTI_ERP_Enterpriseresourceplanning, InversionTI_SistemasEmpresariales), solver);
		varsParentChildInversionTI_SistemasEmpresariales[1] = InversionTI_ERP_Enterpriseresourceplanning;
		IntVar sumParentChildInversionTI_ERP_Enterpriseresourceplanning = VariableFactory.fixed("sumParentChildInversionTI_ERP_Enterpriseresourceplanning", 0, solver); 
		BoolVar[] varsParentChildInversionTI_ERP_Enterpriseresourceplanning = new BoolVar[9];
		SatFactory.addClauses(LogOp.implies(InversionTI_ERP_Modulorecursoshumanos, InversionTI_ERP_Enterpriseresourceplanning), solver);
		varsParentChildInversionTI_ERP_Enterpriseresourceplanning[0] = InversionTI_ERP_Modulorecursoshumanos;
		SatFactory.addClauses(LogOp.implies(InversionTI_ERP_Modulofinanciero, InversionTI_ERP_Enterpriseresourceplanning), solver);
		varsParentChildInversionTI_ERP_Enterpriseresourceplanning[1] = InversionTI_ERP_Modulofinanciero;
		SatFactory.addClauses(LogOp.implies(InversionTI_ERP_Moduloadministrativo, InversionTI_ERP_Enterpriseresourceplanning), solver);
		varsParentChildInversionTI_ERP_Enterpriseresourceplanning[2] = InversionTI_ERP_Moduloadministrativo;
		SatFactory.addClauses(LogOp.implies(InversionTI_ERP_Modulodeproduccion, InversionTI_ERP_Enterpriseresourceplanning), solver);
		varsParentChildInversionTI_ERP_Enterpriseresourceplanning[3] = InversionTI_ERP_Modulodeproduccion;
		SatFactory.addClauses(LogOp.implies(InversionTI_ERP_Modulodeclientes, InversionTI_ERP_Enterpriseresourceplanning), solver);
		varsParentChildInversionTI_ERP_Enterpriseresourceplanning[4] = InversionTI_ERP_Modulodeclientes;
		SatFactory.addClauses(LogOp.implies(InversionTI_ERP_Modulodegestiondeabastecimiento, InversionTI_ERP_Enterpriseresourceplanning), solver);
		varsParentChildInversionTI_ERP_Enterpriseresourceplanning[5] = InversionTI_ERP_Modulodegestiondeabastecimiento;
		SatFactory.addClauses(LogOp.implies(InversionTI_ERP_Modulodeinteligenciadenegocio, InversionTI_ERP_Enterpriseresourceplanning), solver);
		varsParentChildInversionTI_ERP_Enterpriseresourceplanning[6] = InversionTI_ERP_Modulodeinteligenciadenegocio;
		SatFactory.addClauses(LogOp.implies(InversionTI_ERP_Marketingyventas, InversionTI_ERP_Enterpriseresourceplanning), solver);
		varsParentChildInversionTI_ERP_Enterpriseresourceplanning[7] = InversionTI_ERP_Marketingyventas;
		SatFactory.addClauses(LogOp.implies(InversionTI_ERP_Modulodegestiondeproyectos, InversionTI_ERP_Enterpriseresourceplanning), solver);
		varsParentChildInversionTI_ERP_Enterpriseresourceplanning[8] = InversionTI_ERP_Modulodegestiondeproyectos;
		LogicalConstraintFactory.ifThen(IntConstraintFactory.arithm(InversionTI_ERP_Enterpriseresourceplanning, "=", 0), IntConstraintFactory.sum(varsParentChildInversionTI_ERP_Enterpriseresourceplanning, sumParentChildInversionTI_ERP_Enterpriseresourceplanning));
		SatFactory.addClauses(LogOp.implies(InversionTI_SCM_Sistemadegestiondeabastecimiento, InversionTI_SistemasEmpresariales), solver);
		varsParentChildInversionTI_SistemasEmpresariales[2] = InversionTI_SCM_Sistemadegestiondeabastecimiento;
		LogicalConstraintFactory.ifThen(IntConstraintFactory.arithm(InversionTI_SistemasEmpresariales, "=", 0), IntConstraintFactory.sum(varsParentChildInversionTI_SistemasEmpresariales, sumParentChildInversionTI_SistemasEmpresariales));
		SatFactory.addClauses(LogOp.implies(InversionTI_NuevovsExistente, InversionTI_InversionTI), solver);
		varsParentChildInversionTI_InversionTI[2] = InversionTI_NuevovsExistente;
		IntVar sumParentChildInversionTI_NuevovsExistente = VariableFactory.fixed("sumParentChildInversionTI_NuevovsExistente", 0, solver); 
		BoolVar[] varsParentChildInversionTI_NuevovsExistente = new BoolVar[2];
		SatFactory.addClauses(LogOp.implies(InversionTI_Adquirirsistemanuevo, InversionTI_NuevovsExistente), solver);
		varsParentChildInversionTI_NuevovsExistente[0] = InversionTI_Adquirirsistemanuevo;
		SatFactory.addClauses(LogOp.implies(InversionTI_Adaptarsistemaexistente, InversionTI_NuevovsExistente), solver);
		varsParentChildInversionTI_NuevovsExistente[1] = InversionTI_Adaptarsistemaexistente;
		LogicalConstraintFactory.ifThen(IntConstraintFactory.arithm(InversionTI_NuevovsExistente, "=", 0), IntConstraintFactory.sum(varsParentChildInversionTI_NuevovsExistente, sumParentChildInversionTI_NuevovsExistente));
		SatFactory.addClauses(LogOp.implies(InversionTI_Tercerizacion, InversionTI_InversionTI), solver);
		varsParentChildInversionTI_InversionTI[3] = InversionTI_Tercerizacion;
		IntVar sumParentChildInversionTI_Tercerizacion = VariableFactory.fixed("sumParentChildInversionTI_Tercerizacion", 0, solver); 
		BoolVar[] varsParentChildInversionTI_Tercerizacion = new BoolVar[4];
		SatFactory.addClauses(LogOp.implies(InversionTI_Subcontratarpersonalizacion, InversionTI_Tercerizacion), solver);
		varsParentChildInversionTI_Tercerizacion[0] = InversionTI_Subcontratarpersonalizacion;
		SatFactory.addClauses(LogOp.implies(InversionTI_Subcontratarpartedeldesarrolloeintegracion, InversionTI_Tercerizacion), solver);
		varsParentChildInversionTI_Tercerizacion[1] = InversionTI_Subcontratarpartedeldesarrolloeintegracion;
		SatFactory.addClauses(LogOp.implies(InversionTI_Subcontratarlaadministraciondeunprocesodenegociocompleto, InversionTI_Tercerizacion), solver);
		varsParentChildInversionTI_Tercerizacion[2] = InversionTI_Subcontratarlaadministraciondeunprocesodenegociocompleto;
		SatFactory.addClauses(LogOp.implies(InversionTI_Subcontratargerenciadelproyectodeimplementacion, InversionTI_Tercerizacion), solver);
		varsParentChildInversionTI_Tercerizacion[3] = InversionTI_Subcontratargerenciadelproyectodeimplementacion;
		LogicalConstraintFactory.ifThen(IntConstraintFactory.arithm(InversionTI_Tercerizacion, "=", 0), IntConstraintFactory.sum(varsParentChildInversionTI_Tercerizacion, sumParentChildInversionTI_Tercerizacion));
		SatFactory.addClauses(LogOp.implies(InversionTI_TipodeSolucion, InversionTI_InversionTI), solver);
		varsParentChildInversionTI_InversionTI[4] = InversionTI_TipodeSolucion;
		IntVar sumParentChildInversionTI_TipodeSolucion = VariableFactory.fixed("sumParentChildInversionTI_TipodeSolucion", 0, solver); 
		BoolVar[] varsParentChildInversionTI_TipodeSolucion = new BoolVar[2];
		SatFactory.addClauses(LogOp.implies(InversionTI_Comercial, InversionTI_TipodeSolucion), solver);
		varsParentChildInversionTI_TipodeSolucion[0] = InversionTI_Comercial;
		SatFactory.addClauses(LogOp.implies(InversionTI_OpenSource, InversionTI_TipodeSolucion), solver);
		varsParentChildInversionTI_TipodeSolucion[1] = InversionTI_OpenSource;
		LogicalConstraintFactory.ifThen(IntConstraintFactory.arithm(InversionTI_TipodeSolucion, "=", 0), IntConstraintFactory.sum(varsParentChildInversionTI_TipodeSolucion, sumParentChildInversionTI_TipodeSolucion));
		SatFactory.addClauses(LogOp.implies(InversionTI_ModelodeDespliegue, InversionTI_InversionTI), solver);
		varsParentChildInversionTI_InversionTI[5] = InversionTI_ModelodeDespliegue;
		IntVar sumParentChildInversionTI_ModelodeDespliegue = VariableFactory.fixed("sumParentChildInversionTI_ModelodeDespliegue", 0, solver); 
		BoolVar[] varsParentChildInversionTI_ModelodeDespliegue = new BoolVar[3];
		SatFactory.addClauses(LogOp.implies(InversionTI_OnPremise, InversionTI_ModelodeDespliegue), solver);
		varsParentChildInversionTI_ModelodeDespliegue[0] = InversionTI_OnPremise;
		SatFactory.addClauses(LogOp.implies(InversionTI_SoftwarecomoservicioSaaS, InversionTI_ModelodeDespliegue), solver);
		varsParentChildInversionTI_ModelodeDespliegue[1] = InversionTI_SoftwarecomoservicioSaaS;
		SatFactory.addClauses(LogOp.implies(InversionTI_InfraestructuracomoservicioIaaS, InversionTI_ModelodeDespliegue), solver);
		varsParentChildInversionTI_ModelodeDespliegue[2] = InversionTI_InfraestructuracomoservicioIaaS;
		LogicalConstraintFactory.ifThen(IntConstraintFactory.arithm(InversionTI_ModelodeDespliegue, "=", 0), IntConstraintFactory.sum(varsParentChildInversionTI_ModelodeDespliegue, sumParentChildInversionTI_ModelodeDespliegue));
		SatFactory.addClauses(LogOp.implies(InversionTI_ModelodeImplementacion, InversionTI_InversionTI), solver);
		varsParentChildInversionTI_InversionTI[6] = InversionTI_ModelodeImplementacion;
		IntVar sumParentChildInversionTI_ModelodeImplementacion = VariableFactory.fixed("sumParentChildInversionTI_ModelodeImplementacion", 0, solver); 
		BoolVar[] varsParentChildInversionTI_ModelodeImplementacion = new BoolVar[3];
		SatFactory.addClauses(LogOp.implies(InversionTI_BigBang, InversionTI_ModelodeImplementacion), solver);
		varsParentChildInversionTI_ModelodeImplementacion[0] = InversionTI_BigBang;
		SatFactory.addClauses(LogOp.implies(InversionTI_Implementacionporfases, InversionTI_ModelodeImplementacion), solver);
		varsParentChildInversionTI_ModelodeImplementacion[1] = InversionTI_Implementacionporfases;
		SatFactory.addClauses(LogOp.implies(InversionTI_Implementacionporprocesos, InversionTI_ModelodeImplementacion), solver);
		varsParentChildInversionTI_ModelodeImplementacion[2] = InversionTI_Implementacionporprocesos;
		LogicalConstraintFactory.ifThen(IntConstraintFactory.arithm(InversionTI_ModelodeImplementacion, "=", 0), IntConstraintFactory.sum(varsParentChildInversionTI_ModelodeImplementacion, sumParentChildInversionTI_ModelodeImplementacion));
		SatFactory.addClauses(LogOp.implies(InversionTI_Mantenimiento, InversionTI_InversionTI), solver);
		varsParentChildInversionTI_InversionTI[7] = InversionTI_Mantenimiento;
		IntVar sumParentChildInversionTI_Mantenimiento = VariableFactory.fixed("sumParentChildInversionTI_Mantenimiento", 0, solver); 
		BoolVar[] varsParentChildInversionTI_Mantenimiento = new BoolVar[4];
		SatFactory.addClauses(LogOp.implies(InversionTI_Contratoconelproveedor, InversionTI_Mantenimiento), solver);
		varsParentChildInversionTI_Mantenimiento[0] = InversionTI_Contratoconelproveedor;
		SatFactory.addClauses(LogOp.implies(InversionTI_Contratoconunproveedorespecializado, InversionTI_Mantenimiento), solver);
		varsParentChildInversionTI_Mantenimiento[1] = InversionTI_Contratoconunproveedorespecializado;
		SatFactory.addClauses(LogOp.implies(InversionTI_Mantenimientoporcuentapropia, InversionTI_Mantenimiento), solver);
		varsParentChildInversionTI_Mantenimiento[2] = InversionTI_Mantenimientoporcuentapropia;
		SatFactory.addClauses(LogOp.implies(InversionTI_Sincontratodemantenimiento, InversionTI_Mantenimiento), solver);
		varsParentChildInversionTI_Mantenimiento[3] = InversionTI_Sincontratodemantenimiento;
		LogicalConstraintFactory.ifThen(IntConstraintFactory.arithm(InversionTI_Mantenimiento, "=", 0), IntConstraintFactory.sum(varsParentChildInversionTI_Mantenimiento, sumParentChildInversionTI_Mantenimiento));
		SatFactory.addClauses(LogOp.implies(InversionTI_ModelodeSeleccion, InversionTI_InversionTI), solver);
		varsParentChildInversionTI_InversionTI[8] = InversionTI_ModelodeSeleccion;
		IntVar sumParentChildInversionTI_ModelodeSeleccion = VariableFactory.fixed("sumParentChildInversionTI_ModelodeSeleccion", 0, solver); 
		BoolVar[] varsParentChildInversionTI_ModelodeSeleccion = new BoolVar[3];
		SatFactory.addClauses(LogOp.implies(InversionTI_RFP_Requestforproposal, InversionTI_ModelodeSeleccion), solver);
		varsParentChildInversionTI_ModelodeSeleccion[0] = InversionTI_RFP_Requestforproposal;
		SatFactory.addClauses(LogOp.implies(InversionTI_Consultoriaexterna, InversionTI_ModelodeSeleccion), solver);
		varsParentChildInversionTI_ModelodeSeleccion[1] = InversionTI_Consultoriaexterna;
		SatFactory.addClauses(LogOp.implies(InversionTI_Evaluacioninterna, InversionTI_ModelodeSeleccion), solver);
		varsParentChildInversionTI_ModelodeSeleccion[2] = InversionTI_Evaluacioninterna;
		LogicalConstraintFactory.ifThen(IntConstraintFactory.arithm(InversionTI_ModelodeSeleccion, "=", 0), IntConstraintFactory.sum(varsParentChildInversionTI_ModelodeSeleccion, sumParentChildInversionTI_ModelodeSeleccion));
		SatFactory.addClauses(LogOp.implies(InversionTI_Plataforma, InversionTI_InversionTI), solver);
		varsParentChildInversionTI_InversionTI[9] = InversionTI_Plataforma;
		IntVar sumParentChildInversionTI_Plataforma = VariableFactory.fixed("sumParentChildInversionTI_Plataforma", 0, solver); 
		BoolVar[] varsParentChildInversionTI_Plataforma = new BoolVar[2];
		SatFactory.addClauses(LogOp.implies(InversionTI_Sistemaempresarialbasadoenlamismaplataformatecnologica, InversionTI_Plataforma), solver);
		varsParentChildInversionTI_Plataforma[0] = InversionTI_Sistemaempresarialbasadoenlamismaplataformatecnologica;
		SatFactory.addClauses(LogOp.implies(InversionTI_Sistemaempresarialbasadoenunaplataformadiferente, InversionTI_Plataforma), solver);
		varsParentChildInversionTI_Plataforma[1] = InversionTI_Sistemaempresarialbasadoenunaplataformadiferente;
		LogicalConstraintFactory.ifThen(IntConstraintFactory.arithm(InversionTI_Plataforma, "=", 0), IntConstraintFactory.sum(varsParentChildInversionTI_Plataforma, sumParentChildInversionTI_Plataforma));
		SatFactory.addClauses(LogOp.implies(InversionTI_Integracion, InversionTI_InversionTI), solver);
		varsParentChildInversionTI_InversionTI[10] = InversionTI_Integracion;
		IntVar sumParentChildInversionTI_Integracion = VariableFactory.fixed("sumParentChildInversionTI_Integracion", 0, solver); 
		BoolVar[] varsParentChildInversionTI_Integracion = new BoolVar[3];
		SatFactory.addClauses(LogOp.implies(InversionTI_Middleware, InversionTI_Integracion), solver);
		varsParentChildInversionTI_Integracion[0] = InversionTI_Middleware;
		SatFactory.addClauses(LogOp.implies(InversionTI_Desarrollopropio, InversionTI_Integracion), solver);
		varsParentChildInversionTI_Integracion[1] = InversionTI_Desarrollopropio;
		SatFactory.addClauses(LogOp.implies(InversionTI_Proveedor, InversionTI_Integracion), solver);
		varsParentChildInversionTI_Integracion[2] = InversionTI_Proveedor;
		LogicalConstraintFactory.ifThen(IntConstraintFactory.arithm(InversionTI_Integracion, "=", 0), IntConstraintFactory.sum(varsParentChildInversionTI_Integracion, sumParentChildInversionTI_Integracion));
		SatFactory.addClauses(LogOp.implies(InversionTI_Financiacion, InversionTI_InversionTI), solver);
		varsParentChildInversionTI_InversionTI[11] = InversionTI_Financiacion;
		IntVar sumParentChildInversionTI_Financiacion = VariableFactory.fixed("sumParentChildInversionTI_Financiacion", 0, solver); 
		BoolVar[] varsParentChildInversionTI_Financiacion = new BoolVar[3];
		SatFactory.addClauses(LogOp.implies(InversionTI_RecursosPropios, InversionTI_Financiacion), solver);
		varsParentChildInversionTI_Financiacion[0] = InversionTI_RecursosPropios;
		SatFactory.addClauses(LogOp.implies(InversionTI_Credito, InversionTI_Financiacion), solver);
		varsParentChildInversionTI_Financiacion[1] = InversionTI_Credito;
		SatFactory.addClauses(LogOp.implies(InversionTI_Leasing, InversionTI_Financiacion), solver);
		varsParentChildInversionTI_Financiacion[2] = InversionTI_Leasing;
		LogicalConstraintFactory.ifThen(IntConstraintFactory.arithm(InversionTI_Financiacion, "=", 0), IntConstraintFactory.sum(varsParentChildInversionTI_Financiacion, sumParentChildInversionTI_Financiacion));
		LogicalConstraintFactory.ifThen(IntConstraintFactory.arithm(InversionTI_InversionTI, "=", 0), IntConstraintFactory.sum(varsParentChildInversionTI_InversionTI, sumParentChildInversionTI_InversionTI));
		
		SatFactory.addClauses(LogOp.or(InversionTI_ERP_Modulodeclientes, LogOp.nor(InversionTI_Gestiondecontactos)), solver);
		SatFactory.addClauses(LogOp.or(LogOp.nor(InversionTI_Ajustarprocesosdeflujodetrabajo), LogOp.or(InversionTI_ERP_Modulodegestiondeabastecimiento, LogOp.nor(InversionTI_Mejorarcapacidadderespuesta))), solver);
		SatFactory.addClauses(LogOp.or(LogOp.nor(InversionTI_Gestionarpresupuestos), LogOp.or(LogOp.nor(InversionTI_Crearyconsolidarinformes), LogOp.or(LogOp.nor(InversionTI_Buscartendenciasyrelaciones), LogOp.or(InversionTI_ERP_Modulodeinteligenciadenegocio, LogOp.nor(InversionTI_Compartirconocimiento))))), solver);
		SatFactory.addClauses(LogOp.or(LogOp.nor(InversionTI_Segmentarydepurarclientes), LogOp.or(LogOp.nor(InversionTI_Planificacionypresupuestosdemercadeo), LogOp.or(LogOp.nor(InversionTI_Gestiondedatosylistas), LogOp.or(LogOp.nor(InversionTI_Analisisdemarketing), LogOp.or(LogOp.nor(InversionTI_GestiondeCampanias), LogOp.or(LogOp.nor(InversionTI_Facilitartareasdemercadeoypublicidad), LogOp.or(InversionTI_CRM_Modulomarketing, LogOp.nor(InversionTI_Gestionderespuestasyclientespotenciales)))))))), solver);
		SatFactory.addClauses(LogOp.or(LogOp.nor(InversionTI_Reducirciclosdeventas), LogOp.or(LogOp.nor(InversionTI_Aumentartasasdecierredeventas), LogOp.or(LogOp.nor(InversionTI_Mejorarretenciondeclientes), LogOp.or(InversionTI_CRM_ModuloVentas, LogOp.nor(InversionTI_Implementarnuevoprocesodeventas))))), solver);
		SatFactory.addClauses(LogOp.or(LogOp.nor(InversionTI_Gestionarinformaciondeclientes), LogOp.or(LogOp.nor(InversionTI_Gestiondecasosdeclientes), LogOp.or(LogOp.nor(InversionTI_Historialdeserviciosdeclientes), LogOp.or(LogOp.nor(InversionTI_Aumentarbasedeclientes), LogOp.or(LogOp.nor(InversionTI_Implementarnuevoprocesodeatencionalcliente), LogOp.or(LogOp.nor(InversionTI_Mejorarconocimientodelcliente), LogOp.or(InversionTI_CRM_Modulodeclientes, LogOp.nor(InversionTI_Medirsatisfacciondelconsumidor)))))))), solver);
		SatFactory.addClauses(LogOp.or(LogOp.nor(InversionTI_Controlsobrerecursoshumanos), LogOp.or(LogOp.nor(InversionTI_Nuevosprocesosderecursoshumanos), LogOp.or(LogOp.nor(InversionTI_Reclutamiento), LogOp.or(LogOp.nor(InversionTI_Biodata_hojasdevida), LogOp.or(LogOp.nor(InversionTI_Analisisdecargos_estructuraorganizacional), LogOp.or(LogOp.nor(InversionTI_Nominayadministraciondesalarios), LogOp.or(LogOp.nor(InversionTI_Educacionycapacitacion), LogOp.or(LogOp.nor(InversionTI_Saludocupacional), LogOp.or(InversionTI_ERP_Modulorecursoshumanos, LogOp.nor(InversionTI_Modelamientodeprocesosyorganigramas)))))))))), solver);
		SatFactory.addClauses(LogOp.or(LogOp.nor(InversionTI_Nuevosprocesosfinancieros), LogOp.or(LogOp.nor(InversionTI_Implementarcontrolessobreprocesosfinancieros), LogOp.or(LogOp.nor(InversionTI_Gestioncontable), LogOp.or(LogOp.nor(InversionTI_Manejodecuentasporpagar_Proveedores), LogOp.or(LogOp.nor(InversionTI_Sistemasdecosteo), LogOp.or(LogOp.nor(InversionTI_Administraciondeactivosfijos), LogOp.or(LogOp.nor(InversionTI_Manejodeconciliacionesbancarias), LogOp.or(LogOp.nor(InversionTI_Controldeinversiones), LogOp.or(LogOp.nor(InversionTI_Manejodeobligacionesfinancieras), LogOp.or(LogOp.nor(InversionTI_Tesoreria), LogOp.or(LogOp.nor(InversionTI_Contabilidadanalitica), LogOp.or(LogOp.nor(InversionTI_Controlyadministraciondelpresupuesto), LogOp.or(InversionTI_ERP_Modulofinanciero, LogOp.nor(InversionTI_Manejodeactivosdecapital)))))))))))))), solver);
		SatFactory.addClauses(LogOp.or(InversionTI_Manejodeinventarios, LogOp.or(LogOp.nor(InversionTI_Manejodealmacen), LogOp.or(LogOp.nor(InversionTI_Gestiondecompras), LogOp.or(LogOp.nor(InversionTI_Gestiondeactivosfijos), LogOp.or(LogOp.nor(InversionTI_Comercioexterior), LogOp.or(InversionTI_ERP_Moduloadministrativo, LogOp.nor(InversionTI_Seguros))))))), solver);
		SatFactory.addClauses(LogOp.or(LogOp.nor(InversionTI_Manejodeordenesdeproduccion), LogOp.or(LogOp.nor(InversionTI_Manejodeordenesdecompra), LogOp.or(LogOp.nor(InversionTI_Planificaciondenecesidadesdecapacidad), LogOp.or(LogOp.nor(InversionTI_Planificaciondesuministros), LogOp.or(LogOp.nor(InversionTI_Disminuirtiemposdeentrega), LogOp.or(LogOp.nor(InversionTI_Integracionconproveedores), LogOp.or(LogOp.nor(InversionTI_Gestiondeproveedores), LogOp.or(LogOp.nor(InversionTI_Administraciondemateriasprimas), LogOp.or(LogOp.nor(InversionTI_Gestiondebodega), LogOp.or(LogOp.nor(InversionTI_Realizarcontroldecostos), LogOp.or(InversionTI_ERP_Modulodeproduccion, LogOp.nor(InversionTI_Administraciondepedidosydespachos)))))))))))), solver);
		SatFactory.addClauses(LogOp.or(LogOp.nor(InversionTI_Ajustarprocesosdeflujodetrabajo), LogOp.or(LogOp.nor(InversionTI_Mejorarcapacidadderespuesta), LogOp.or(LogOp.nor(InversionTI_Planearygestionarcapacidaddebodegajeyalmacenamiento), LogOp.or(LogOp.nor(InversionTI_Gestiondetransportedemercancia), LogOp.or(LogOp.nor(InversionTI_Logisticadetransporteinternacional), LogOp.or(LogOp.nor(InversionTI_Gestionderelacionconproveedores), LogOp.or(InversionTI_SCM_Sistemadegestiondeabastecimiento, LogOp.nor(InversionTI_Gestiondelademanda)))))))), solver);
		SatFactory.addClauses(LogOp.or(LogOp.nor(InversionTI_GestiondeCampanias), LogOp.or(LogOp.nor(InversionTI_Gestionarinformaciondeclientes), LogOp.or(LogOp.nor(InversionTI_Historialdeserviciosdeclientes), LogOp.or(LogOp.nor(InversionTI_Organizarrecursosdeservicio), LogOp.or(LogOp.nor(InversionTI_Facturacionydevolucion), LogOp.or(LogOp.nor(InversionTI_Cartera), LogOp.or(LogOp.nor(InversionTI_Administraciondepreciosydescuentos), LogOp.or(LogOp.nor(InversionTI_Administraciondepromociones), LogOp.or(LogOp.nor(InversionTI_Administraciondecuotaseincentivos), LogOp.or(LogOp.nor(InversionTI_Administraciondevisitacomercial), LogOp.or(LogOp.nor(InversionTI_Importacionesyexportaciones), LogOp.or(InversionTI_ERP_Marketingyventas, LogOp.nor(InversionTI_Gestionarcontratosdeservicio))))))))))))), solver);
		SatFactory.addClauses(LogOp.or(LogOp.nor(InversionTI_Presupuestarcostosytiempos), LogOp.or(LogOp.nor(InversionTI_Automatizarlafacturacion), LogOp.or(LogOp.nor(InversionTI_Predecirdisponibilidades), LogOp.or(LogOp.nor(InversionTI_Seguimientodecostosyconsumos), LogOp.or(InversionTI_ERP_Modulodegestiondeproyectos, LogOp.nor(InversionTI_Planificarcapacidades)))))), solver);
		
		
		//Chatterbox.showSolutions(solver);
		Chatterbox.showStatistics(solver);
		solver.findAllSolutions();
		long end = System.currentTimeMillis();
		System.out.println("Total time: " + (end - start));
	}
}

